name: Deploy Application

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up AWS CLI
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Build Docker image
      run: |
        set -x
        docker build -t my-flask-app-repo .
        docker tag my-flask-app-repo:latest ${{ secrets.ECR_REPOSITORY }}:latest
        aws ecr-public get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ secrets.ECR_REPOSITORY }}
        docker push ${{ secrets.ECR_REPOSITORY }}:latest

    - name: Register new Task Definition
      id: register_task
      run: |
        NEW_TASK_DEFINITION_ARN=$(aws ecs register-task-definition \
          --family flask-task \
          --network-mode awsvpc \
          --requires-compatibilities FARGATE \
          --cpu "256" \
          --memory "512" \
          --container-definitions '[{
            "name": "flask-container",
            "image": "${{ secrets.ECR_REPOSITORY }}:latest",
            "essential": true,
            "memory": 512,
            "cpu": 256,
            "portMappings": [{
              "containerPort": 5000,
              "hostPort": 5000
            }],
            "healthCheck": {
              "command": ["CMD-SHELL", "curl -f http://localhost:5000/health || exit 1"],
              "interval": 30,
              "retries": 3,
              "startPeriod": 0,
              "timeout": 5
            }
          }]' \
          --query 'taskDefinition.taskDefinitionArn' \
          --output text \
          --region us-east-1)
        
        echo "New Task Definition ARN: $NEW_TASK_DEFINITION_ARN"
        echo "::set-output name=task_definition_arn::$NEW_TASK_DEFINITION_ARN"

    - name: Update ECS Service
      run: |
        echo "Updating ECS Service with Task Definition ARN: ${{ steps.register_task.outputs.task_definition_arn }}"
        aws ecs update-service \
          --cluster my-ecs-cluster \
          --service flask-service \
          --task-definition ${{ steps.register_task.outputs.task_definition_arn }} \
          --region us-east-1